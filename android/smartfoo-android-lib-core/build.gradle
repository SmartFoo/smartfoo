apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

archivesBaseName = 'smartfoo-android-lib-core'
description = 'SmartFoo Core Library for Android'
group = 'com.smartfoo'
version = '0.0.24'

def siteUrl = 'https://github.com/SmartFoo/smartfoo'
def gitUrl = 'https://github.com/SmartFoo/smartfoo.git'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v13:25.3.1'
    compile 'com.android.support:percent:25.3.1'
    testCompile 'junit:junit:4.12'
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName version

        consumerProguardFiles 'proguard-library-consumer.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles 'proguard-library.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false

            //
            // NOTE:(pv) Setting this to true can mess up debugging by hiding method parameters (especially anonymous methods)
            // If you are seeing weird missing variables when debugging, set this to false.
            // DO NOT CHECK THIS IN AS 'false'!
            //
            testCoverageEnabled false
        }
    }

    if (getIsLocalDevelopmentBuild()) {
        defaultPublishConfig 'debug'
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    configurations = ['archives']

    publish = true

    pkg {
        repo = 'maven'
        name = archivesBaseName
        userOrg = 'smartfoo'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['MIT']
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name description
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://raw.githubusercontent.com/SmartFoo/smartfoo/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id 'paulpv'
                        name 'Paul Peavyhouse'
                        email 'pv@swooby.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// Required to prevent "error: reference not found" for Android OS/API calls
afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
